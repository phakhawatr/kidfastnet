import { useState, useEffect, useMemo } from 'react';
import { Link } from 'react-router-dom';
import Header from '../components/Header';
import Footer from '../components/Footer';
import SkillsSection from '../components/SkillsSection';
import { useAuth } from '../hooks/useAuth';

// Import mascot images
import mascotAddition from '../assets/mascot-addition.png';
import mascotSubtraction from '../assets/mascot-subtraction.png';
import mascotMultiplication from '../assets/mascot-multiplication.png';
import mascotDivision from '../assets/mascot-division.png';
import mascotTime from '../assets/mascot-time.png';
import mascotWeighing from '../assets/mascot-weighing.png';

// Define all available recommendations for each grade
const allRecommendations = {
  '1': [
    {
      icon: '‚ûï',
      title: '‡∏Å‡∏≤‡∏£‡∏ö‡∏ß‡∏Å‡πÄ‡∏•‡∏Ç',
      description: '‡∏°‡∏≤‡∏ù‡∏∂‡∏Å‡∏ö‡∏ß‡∏Å‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô! ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡∏Ç‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÑ‡∏õ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏ß‡∏Å 2 ‡∏´‡∏•‡∏±‡∏Å',
      link: '/addition',
      color: 'bg-[hsl(var(--grade-1))]'
    },
    {
      icon: 'üìè',
      title: '‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß',
      description: '‡∏ù‡∏∂‡∏Å‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏ö‡∏ö‡∏™‡∏ô‡∏∏‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢!',
      link: '/length-comparison',
      color: 'bg-[hsl(var(--grade-2))]'
    },
    {
      icon: 'üî¢',
      title: '‡∏ó‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô‡∏•‡∏≥‡∏î‡∏±‡∏ö',
      description: '‡∏ù‡∏∂‡∏Å‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô‡∏•‡∏≥‡∏î‡∏±‡∏ö ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå!',
      link: '/NumberSeries',
      color: 'bg-[hsl(var(--grade-3))]'
    },
    {
      icon: 'üî∑',
      title: '‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á',
      description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡πÄ‡∏£‡∏Ç‡∏≤‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏ä‡∏¥‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà!',
      link: '/shape-matching',
      color: 'bg-[hsl(var(--grade-3))]'
    }
  ],
  '2': [
    {
      icon: '‚ûñ',
      title: '‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏•‡∏Ç 2 ‡∏´‡∏•‡∏±‡∏Å',
      description: '‡∏°‡∏≤‡∏ù‡∏∂‡∏Å‡∏•‡∏ö‡πÄ‡∏•‡∏Ç 2 ‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô! ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡∏Ç‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÑ‡∏õ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢',
      link: '/subtraction',
      color: 'bg-[hsl(var(--grade-2))]'
    },
    {
      icon: '‚ûï',
      title: '‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏ß‡∏Å',
      description: '‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏ß‡∏Å‡πÄ‡∏•‡∏Ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å!',
      link: '/addition',
      color: 'bg-[hsl(var(--grade-1))]'
    },
    {
      icon: 'üî∑',
      title: '‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á',
      description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡πÄ‡∏£‡∏Ç‡∏≤‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏ä‡∏¥‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà!',
      link: '/shape-matching',
      color: 'bg-[hsl(var(--grade-3))]'
    },
    {
      icon: 'üìè',
      title: '‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß',
      description: '‡∏ù‡∏∂‡∏Å‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏ö‡∏ö‡∏™‡∏ô‡∏∏‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢!',
      link: '/length-comparison',
      color: 'bg-[hsl(var(--grade-2))]'
    }
  ],
  '3': [
    {
      icon: '‚úñÔ∏è',
      title: '‡∏Å‡∏≤‡∏£‡∏Ñ‡∏π‡∏ì',
      description: '‡∏ù‡∏∂‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏π‡∏ì‡πÉ‡∏´‡πâ‡πÅ‡∏°‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô! ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á',
      link: '/multiply',
      color: 'bg-[hsl(var(--grade-3))]'
    },
    {
      icon: 'üìä',
      title: '‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏π‡∏ì',
      description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏π‡∏ì‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡∏ù‡∏∂‡∏Å‡∏à‡∏ô‡∏à‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß!',
      link: '/multiplication-table',
      color: 'bg-[hsl(var(--grade-4))]'
    },
    {
      icon: 'üìê',
      title: '‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î',
      description: '‡∏ù‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢ ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô!',
      link: '/measurement',
      color: 'bg-[hsl(var(--grade-2))]'
    },
    {
      icon: '‚ûï',
      title: '‡∏Å‡∏≤‡∏£‡∏ö‡∏ß‡∏Å‡πÄ‡∏•‡∏Ç',
      description: '‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏ß‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á!',
      link: '/addition',
      color: 'bg-[hsl(var(--grade-1))]'
    }
  ],
  '4': [
    {
      icon: '‚ûó',
      title: '‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏£',
      description: '‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß! ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÇ‡∏à‡∏ó‡∏¢‡πå',
      link: '/division',
      color: 'bg-[hsl(var(--grade-4))]'
    },
    {
      icon: 'üçï',
      title: '‡πÄ‡∏®‡∏©‡∏™‡πà‡∏ß‡∏ô',
      description: '‡∏ù‡∏∂‡∏Å‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏®‡∏©‡∏™‡πà‡∏ß‡∏ô ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå!',
      link: '/fraction-matching',
      color: 'bg-[hsl(var(--grade-5))]'
    },
    {
      icon: '‚úñÔ∏è',
      title: '‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏π‡∏ì',
      description: '‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏π‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏£ ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å!',
      link: '/multiply',
      color: 'bg-[hsl(var(--grade-3))]'
    },
    {
      icon: 'üìä',
      title: '‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏π‡∏ì',
      description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏π‡∏ì‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡∏ù‡∏∂‡∏Å‡∏à‡∏ô‡∏à‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß!',
      link: '/multiplication-table',
      color: 'bg-[hsl(var(--grade-4))]'
    }
  ],
  '5': [
    {
      icon: 'üïê',
      title: '‡∏ö‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤',
      description: '‡∏ù‡∏∂‡∏Å‡∏≠‡πà‡∏≤‡∏ô‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤‡πÅ‡∏•‡∏∞‡∏ö‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏à‡∏£‡∏¥‡∏á!',
      link: '/time',
      color: 'bg-[hsl(var(--grade-5))]'
    },
    {
      icon: 'üçï',
      title: '‡πÄ‡∏®‡∏©‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á',
      description: '‡∏ù‡∏∂‡∏Å‡πÄ‡∏®‡∏©‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á!',
      link: '/fraction-matching',
      color: 'bg-[hsl(var(--grade-4))]'
    },
    {
      icon: 'üìä',
      title: '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå',
      description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢!',
      link: '/percentage',
      color: 'bg-[hsl(var(--grade-6))]'
    },
    {
      icon: '‚ûó',
      title: '‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏£',
      description: '‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á!',
      link: '/division',
      color: 'bg-[hsl(var(--grade-4))]'
    }
  ],
  '6': [
    {
      icon: '‚öñÔ∏è',
      title: '‡∏ö‡∏≠‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å',
      description: '‡∏ù‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏±‡πà‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏°‡∏ß‡∏• ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô!',
      link: '/weighing',
      color: 'bg-[hsl(var(--grade-6))]'
    },
    {
      icon: '‚ö°',
      title: '‡∏Ñ‡∏ì‡∏¥‡∏ï‡πÄ‡∏£‡πá‡∏ß',
      description: '‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì! ‡∏ù‡∏∂‡∏Å‡∏ó‡∏±‡πâ‡∏á ‡∏ö‡∏ß‡∏Å ‡∏•‡∏ö ‡∏Ñ‡∏π‡∏ì ‡∏´‡∏≤‡∏£ ‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥',
      link: '/quick-math',
      color: 'bg-[hsl(var(--grade-5))]'
    },
    {
      icon: 'üß©',
      title: '‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏•‡∏Ç',
      description: '‡πÅ‡∏Å‡πâ‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏™‡∏°‡∏≠‡∏á ‡∏ù‡∏∂‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ö‡∏ö‡∏™‡∏ô‡∏∏‡∏Å!',
      link: '/SumGridPuzzles',
      color: 'bg-[hsl(var(--grade-4))]'
    },
    {
      icon: 'üìä',
      title: '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå',
      description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢!',
      link: '/percentage',
      color: 'bg-[hsl(var(--grade-6))]'
    }
  ]
};

const Profile = () => {
  const {
    username,
    isDemo,
    logout
  } = useAuth();
  const [selectedGrade, setSelectedGrade] = useState('1');
  const [randomRecommendations, setRandomRecommendations] = useState<any[]>([]);
  const grades = [{
    id: '1',
    label: '‡∏Å‡∏≤‡∏£‡∏ö‡∏ß‡∏Å',
    icon: '‚ûï',
    mascot: mascotAddition
  }, {
    id: '2',
    label: '‡∏Å‡∏≤‡∏£‡∏•‡∏ö',
    icon: '‚ûñ',
    mascot: mascotSubtraction
  }, {
    id: '3',
    label: '‡∏Å‡∏≤‡∏£‡∏Ñ‡∏π‡∏ì',
    icon: '‚úñÔ∏è',
    mascot: mascotMultiplication
  }, {
    id: '4',
    label: '‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏£',
    icon: '‚ûó',
    mascot: mascotDivision
  }, {
    id: '5',
    label: '‡∏ö‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤',
    icon: 'üïê',
    mascot: mascotTime
  }, {
    id: '6',
    label: '‡∏ö‡∏≠‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å',
    icon: '‚öñÔ∏è',
    mascot: mascotWeighing
  }];
  const achievements = [{
    icon: '‚ö°',
    name: '‡∏ô‡∏±‡∏Å‡∏Ñ‡∏¥‡∏î‡πÄ‡∏£‡πá‡∏ß'
  }, {
    icon: 'üî•',
    name: '‡∏ï‡∏¥‡∏î‡πÑ‡∏ü'
  }, {
    icon: 'üëë',
    name: '‡∏£‡∏≤‡∏ä‡∏±‡∏ô‡∏¢‡πå'
  }, {
    icon: '‚ùÑÔ∏è',
    name: '‡πÄ‡∏ã‡∏µ‡∏¢‡∏ô‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á'
  }, {
    icon: 'üêß',
    name: '‡πÄ‡∏û‡∏ô‡∏Å‡∏ß‡∏¥‡∏ô‡πÄ‡∏Å‡πà‡∏á'
  }];
  const subjects = [{
    title: '‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡πÄ‡∏•‡∏Ç',
    progress: 100,
    lessons: '5/5 ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
    difficulty: '‡∏á‡πà‡∏≤‡∏¢',
    status: 'completed',
    tags: ['‡∏ô‡∏±‡∏ö 1-10', '‡∏ô‡∏±‡∏ö 11-50', '‡∏ô‡∏±‡∏ö 51-100'],
    color: 'bg-green-100'
  }, {
    title: '‡∏Å‡∏≤‡∏£‡∏ö‡∏ß‡∏Å',
    progress: 75,
    lessons: '3/4 ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
    difficulty: '‡∏á‡πà‡∏≤‡∏¢',
    status: 'active',
    tags: ['‡∏ö‡∏ß‡∏Å 1-5', '‡∏ö‡∏ß‡∏Å 6-10', '‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 10', '‡∏ö‡∏ß‡∏Å 2 ‡∏´‡∏•‡∏±‡∏Å'],
    color: 'bg-blue-100'
  }, {
    title: '‡∏Å‡∏≤‡∏£‡∏•‡∏ö 2 ‡∏´‡∏•‡∏±‡∏Å',
    progress: 50,
    lessons: '2/4 ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
    difficulty: '‡∏á‡πà‡∏≤‡∏¢',
    status: 'active',
    tags: ['‡∏•‡∏ö 1-5', '‡∏•‡∏ö 6-10', '‡∏•‡∏ö‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 10', '‡∏•‡∏ö 2 ‡∏´‡∏•‡∏±‡∏Å'],
    color: 'bg-yellow-100'
  }, {
    title: '‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á',
    progress: 0,
    lessons: '0/3 ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
    difficulty: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á',
    status: 'locked',
    tags: [],
    color: 'bg-gray-100'
  }];

  // Function to shuffle array and pick 3 random items
  const getRandomRecommendations = (grade: string) => {
    const recommendations = allRecommendations[grade as keyof typeof allRecommendations] || [];
    const shuffled = [...recommendations].sort(() => Math.random() - 0.5);
    return shuffled.slice(0, 3);
  };

  // Randomize recommendations when selectedGrade changes
  useEffect(() => {
    setRandomRecommendations(getRandomRecommendations(selectedGrade));
  }, [selectedGrade]);

  // Get grade label for display
  const getGradeLabel = (gradeId: string) => {
    const grade = grades.find(g => g.id === gradeId);
    return grade ? grade.label : '';
  };

  return <div className="min-h-screen">
      <Header />
      
      <main className="container mx-auto px-4 py-6">
        {/* Welcome Header */}
        <div className="card-glass p-6 mb-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-[hsl(var(--text-primary))] mb-2">
                ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {isDemo ? '‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏î‡∏•‡∏≠‡∏á' : `‡∏ô‡πâ‡∏≠‡∏á${username}`}! üåü
              </h1>
              <p className="text-[hsl(var(--text-secondary))]">‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏ô‡∏∏‡∏Å</p>
            </div>
            <div className="flex gap-2">
              <button className="chip">‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á</button>
            </div>
          </div>
        </div>

        {/* Grade Selection */}
        <div className="flex gap-3 mb-6 overflow-x-auto pb-2">
          {grades.map(grade => (
            <button 
              key={grade.id} 
              onClick={() => setSelectedGrade(grade.id)} 
              className={`relative flex flex-col items-center gap-2 px-4 py-3 rounded-2xl transition-all duration-300 whitespace-nowrap min-w-[120px] ${
                selectedGrade === grade.id 
                  ? 'bg-gradient-to-br from-purple-400 to-pink-400 text-white shadow-lg scale-105' 
                  : 'bg-white/80 hover:bg-white hover:shadow-md'
              }`}
            >
              {/* Mascot Image */}
              <div className={`w-12 h-12 rounded-full overflow-hidden bg-white/50 flex items-center justify-center transition-transform duration-300 ${
                selectedGrade === grade.id ? 'animate-bounce' : 'hover:scale-110'
              }`}>
                <img 
                  src={grade.mascot} 
                  alt={grade.label}
                  className="w-10 h-10 object-contain"
                />
              </div>
              
              {/* Label */}
              <span className={`text-sm font-bold ${
                selectedGrade === grade.id ? 'text-white' : 'text-[hsl(var(--text-primary))]'
              }`}>
                {grade.label}
              </span>
              
              {/* Active Indicator */}
              {selectedGrade === grade.id && (
                <div className="absolute -bottom-1 left-1/2 transform -translate-x-1/2 w-8 h-1 bg-white rounded-full" />
              )}
            </button>
          ))}
        </div>

        {/* Recommendation Card */}
        <div className="card-glass p-6 mb-6 border-l-4 border-orange-400">
          <div className="flex items-center gap-3 mb-4">
            <span className="text-2xl">üéØ</span>
            <h2 className="text-xl font-bold text-[hsl(var(--text-primary))]">
              ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì
            </h2>
          </div>
          
          {randomRecommendations.map((recommendation, index) => (
            <div key={index} className={`${recommendation.color} rounded-xl p-6 mb-4`}>
              <h3 className="font-bold text-lg mb-2">
                {recommendation.icon} {recommendation.title}
              </h3>
              <p className="text-sm text-[hsl(var(--text-secondary))] mb-4">
                {recommendation.description}
              </p>
              <Link to={recommendation.link} className="btn-primary text-sm inline-block">
                ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ù‡∏∂‡∏Å‡πÄ‡∏•‡∏¢!
              </Link>
            </div>
          ))}
        </div>

        {/* Achievements */}
        <div className="card-glass p-6 mb-6">
          <h2 className="text-xl font-bold text-[hsl(var(--text-primary))] mb-4">
            üèÜ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
          </h2>
          <div className="flex gap-4 overflow-x-auto pb-2">
            {achievements.map((achievement, index) => <div key={index} className="flex-shrink-0 bg-yellow-100 rounded-full w-16 h-16 flex items-center justify-center text-2xl border-2 border-yellow-300" title={achievement.name}>
                {achievement.icon}
              </div>)}
          </div>
        </div>

        {/* Grade Progress */}
        <div className="card-glass p-6 mb-6">
          <h2 className="text-xl font-bold text-[hsl(var(--text-primary))] mb-4">
            ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î Kidfast AI Application
          </h2>
          
          {/* Stats */}
          <div className="grid grid-cols-3 gap-4 mb-6">
            <div className="text-center">
              <button className="bg-gradient-to-r from-cyan-400 via-emerald-400 to-purple-500 text-white px-6 py-3 rounded-full text-sm font-bold shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-300 flex items-center gap-2 mx-auto">
                <span className="text-lg">‚ú®</span>
                AI ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡πÉ‡∏´‡∏°‡πà
              </button>
              <div className="text-sm text-[hsl(var(--text-muted))] mt-2">‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-orange-500 mb-1">15</div>
              <div className="text-sm text-[hsl(var(--text-muted))]">‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-blue-500 mb-1">‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î</div>
              <div className="text-sm text-[hsl(var(--text-muted))]">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î</div>
            </div>
          </div>
        </div>

        {/* Skills Section */}
        <SkillsSection />

      </main>

      <Footer />
    </div>;
};
export default Profile;